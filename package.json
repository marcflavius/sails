{
  "name": "test-project",
  "private": true,
  "version": "0.0.0",
  "description": "a Sails application",
  "keywords": [],
  "dependencies": {
    "@babel/polyfill": "^7.7.0",
    "@sailshq/connect-redis": "^3.2.1",
    "@sailshq/lodash": "^3.10.3",
    "@sailshq/socket.io-redis": "^5.2.0",
    "autosuggest-highlight": "3.1.1",
    "axios": "0.18.0",
    "connected-react-router": "^6.5.2",
    "cross-env": "^5.1.1",
    "eventemitter3": "latest",
    "foreman": "^1.4.1",
    "grommet": "2.5.5",
    "grommet-controls": "1.1.18",
    "grommet-icons": "^4.3.0",
    "history": "^4.10.1",
    "httpster": "^1.0.4",
    "immer": "2.1.5",
    "include-all": "~0.1.6",
    "isomorphic-fetch": "2.2.1",
    "jest": "^24.9.0",
    "lodash": "latest",
    "prop-types": "latest",
    "proptypes": "1.1.0",
    "rc": "1.0.1",
    "react": "^16.3.2",
    "react-addons-css-transition-group": "15.6.2",
    "react-animated-css": "1.0.4",
    "react-autosuggest": "9.4.3",
    "react-dom": "^16.3.2",
    "react-icons": "3.2.2",
    "react-material-ui-form-validator": "^2.0.9",
    "react-materialize": "2.6.0",
    "react-number-format": "4.0.6",
    "react-pure-lifecycle": "3.0.0",
    "react-redux": "6.0.1",
    "react-router": "^4.2.0",
    "react-router-dom": "^4.2.2",
    "react-router-named-routes": "0.0.23",
    "react-scripts": "3.1.2",
    "react-text-mask": "5.4.3",
    "react-validation": "3.0.7",
    "recompose": "0.30.0",
    "redux": "4.0.1",
    "redux-logger": "3.0.6",
    "redux-saga": "1.0.2",
    "redux-thunk": "2.3.0",
    "sails": "^1.2.3",
    "sails-hook-apianalytics": "^2.0.3",
    "sails-hook-organics": "^0.16.0",
    "sails-hook-orm": "^2.1.1",
    "sails-hook-sockets": "^2.0.0",
    "sails-mongo": "^1.0.1",
    "short-uuid": "^3.1.1",
    "simpl-schema": "1.5.5",
    "uniqid": "5.0.3"
  },
  "devDependencies": {
    "@babel/core": "^7.7.5",
    "@babel/plugin-proposal-async-generator-functions": "^7.2.0",
    "@babel/plugin-proposal-class-properties": "^7.7.4",
    "@babel/plugin-syntax-dynamic-import": "^7.2.0",
    "@babel/plugin-syntax-export-default-from": "^7.7.4",
    "@babel/plugin-syntax-import-meta": "^7.7.4",
    "@babel/plugin-syntax-json-strings": "^7.7.4",
    "@babel/plugin-transform-async-to-generator": "^7.7.4",
    "@babel/plugin-transform-modules-commonjs": "^7.7.5",
    "@babel/plugin-transform-regenerator": "^7.4.4",
    "@babel/preset-env": "^7.7.6",
    "@babel/preset-react": "^7.7.4",
    "@babel/preset-stage-2": "^7.0.0",
    "@babel/runtime": "^7.4.4",
    "@material-ui/core": "3.9.2",
    "@storybook/react": "4.1.13",
    "autoprefixer": "^9.5.1",
    "babel-core": "^6.26.3",
    "babel-loader": "^8.0.6",
    "babel-plugin-syntax-export-extensions": "^6.13.0",
    "babel-plugin-transform-es2015-modules-commonjs": "^6.26.2",
    "babel-preset-react-app": "^8.0.0",
    "css-loader": "^0.28.11",
    "eslint": "5.16.0",
    "file-loader": "^5.0.2",
    "grunt": "1.5.2",
    "grunt-browser-sync": "^2.2.0",
    "htmlhint": "0.11.0",
    "json-loader": "^0.5.7",
    "lesshint": "6.3.6",
    "node-sass": "^4.9.0",
    "node-simple-schema": "0.0.4",
    "sails-hook-autoreload": "^1.1.0",
    "sails-hook-grunt": "^4.0.0",
    "sass-loader": "^7.3.1",
    "style-loader": "^0.21.0",
    "styled-components": "4.1.3",
    "webpack": "^4.41.2",
    "webpack-cli": "^3.2.3",
    "webpack-dev-server": "^3.1.4"
  },
  "scripts": {
    "start": "mongod &>/dev/null & lsof -ti:1338 &>/dev/null | xargs -I {} kill {} && nodemon --exec 'sails lift --port 1338 --redis' -e 'js ejs' -w 'views/pages/' -w 'config'",
    "prod": "NODE_ENV=production node app.js",
    "test": "npm run lint && npm run custom-tests && echo 'Done.'",
    "lint": "./node_modules/eslint/bin/eslint.js . --max-warnings=0 --report-unused-disable-directives && echo '‚úî  Your .js files look so good.' && ./node_modules/htmlhint/bin/htmlhint -c ./.htmlhintrc views/*.ejs && ./node_modules/htmlhint/bin/htmlhint -c ./.htmlhintrc views/**/*.ejs && ./node_modules/htmlhint/bin/htmlhint -c ./.htmlhintrc views/**/**/*.ejs && ./node_modules/htmlhint/bin/htmlhint -c ./.htmlhintrc views/**/**/**/*.ejs && ./node_modules/htmlhint/bin/htmlhint -c ./.htmlhintrc views/**/**/**/**/*.ejs && ./node_modules/htmlhint/bin/htmlhint -c ./.htmlhintrc views/**/**/**/**/**/*.ejs && ./node_modules/htmlhint/bin/htmlhint -c ./.htmlhintrc views/**/**/**/**/**/**/*.ejs && echo '‚úî  So do your .ejs files.' && ./node_modules/lesshint/bin/lesshint assets/styles/ --max-warnings=0 && echo '‚úî  Your .less files look good, too.'",
    "custom-tests": "echo \"(No other custom tests yet.)\" && echo",
    "deploy": "echo 'This script assumes a dead-simple, opinionated setup on Heroku.' && echo 'But, of course, you can deploy your app anywhere you like.' && echo '(Node.js/Sails.js apps are supported on all modern hosting platforms.)' && echo && echo 'Warning: Specifically, this script assumes you are on the master branch, and that your app can be deployed simply by force-pushing on top of the *deploy* branch.  It will also temporarily use a local *predeploy* branch for preparing assets, that it will delete after it finishes.  Please make sure there is nothing you care about on either of these two branches!!!' && echo '' && echo '' && echo 'Preparing to deploy...' && echo '--' && git status && echo '' && echo '--' && echo 'I hope you are on the master branch and have everything committed/pulled/pushed and are completely up to date and stuff.' && echo '********************************************'  && echo '** IF NOT THEN PLEASE PRESS <CTRL+C> NOW! **' && echo '********************************************' && echo 'Press CTRL+C to cancel.' && echo '(you have five seconds)' && sleep 1 && echo '...4' && sleep 1 && echo '...3' && sleep 1 && echo '...2' && sleep 1 && echo '...1' && sleep 1  && echo '' && echo 'Alright, here we go.  No turning back now!' && echo 'Trying to switch to master branch...' && git checkout master && echo && echo 'OK.  Now wiping node_modules/ and running npm install...' && rm -rf node_modules && rm -rf package-lock.json && npm install && (git add package-lock.json && git commit -am 'AUTOMATED COMMIT: Did fresh npm install before deploying, and it caused something relevant (probably the package-lock.json file) to change!  This commit tracks that change.' || true) && echo 'Deploying as version:' && npm version patch && echo '' && git push origin master && git push --tags && (git branch -D predeploy > /dev/null 2>&1 || true) && git checkout -b predeploy && (echo 'Now building+minifying assets for production...' && echo '(Hang tight, this could take a while.)' && echo && node node_modules/grunt/bin/grunt buildProd || (echo && echo '------------------------------------------' && echo 'IMPORTANT!  IMPORTANT!  IMPORTANT!' && echo 'ERROR: Could not compile assets for production!' && echo && echo 'Attempting to recover automatically by stashing, ' && echo 'switching back to the master branch, and then ' && echo 'deleting the predeploy branch... ' && echo && echo 'After this, please fix the issues logged above' && echo 'and push that up.  Then, try deploying again.' && echo '------------------------------------------' && echo && echo 'Staging, deleting the predeploy branch, and switching back to master...' && git stash && git checkout master && git branch -D predeploy && false)) && mv www .www && git add .www && node -e 'sailsrc = JSON.parse(require(\"fs\").readFileSync(\"./.sailsrc\", \"utf8\"));  if (sailsrc.paths&&sailsrc.paths.public !== undefined || sailsrc.hooks&&sailsrc.hooks.grunt !== undefined) { throw new Error(\"Cannot complete deployment script: .sailsrc file has conflicting contents!  Please throw away this midway-complete deployment, switch back to your original branch (master), remove the conflicting stuff from .sailsrc, then commit and push that up.\"); }  sailsrc.paths = sailsrc.paths || {};  sailsrc.paths.public = \"./.www\";   sailsrc.hooks = sailsrc.hooks || {};  sailsrc.hooks.grunt = false;  require(\"fs\").writeFileSync(\"./.sailsrc\", JSON.stringify(sailsrc))' && git commit -am 'AUTOMATED COMMIT: Automatically bundling compiled assets as part of deploy, updating the EJS layout and .sailsrc file accordingly.' && git push origin predeploy && git checkout master && git push origin +predeploy:deploy && git push --tags && git branch -D predeploy && git push origin :predeploy && echo '' && echo '--' && echo 'OK, done.  It should be live momentarily on your staging environment.' && echo '(if you get impatient, check the Heroku dashboard for status)' && echo && echo 'Staging environment:' && echo ' üåê‚Äì‚Ä¢  https://staging.example.com' && echo '       (hold ‚åò and click to open links in the terminal)' && echo && echo 'Please review that to make sure it looks good.' && echo 'When you are ready to go to production, visit your pipeline on Heroku and press the PROMOTE TO PRODUCTION button.'"
  },
  "main": "app.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/sonata/test-project.git"
  },
  "author": "sonata",
  "license": "",
  "engines": {
    "node": "^8.16"
  }
}
